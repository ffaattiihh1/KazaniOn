package com.kazanion.ui.achievements

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import androidx.core.content.ContextCompat
import androidx.recyclerview.widget.RecyclerView
import com.kazanion.R
import com.kazanion.model.LeaderboardEntry

class LeaderboardAdapter(
    private val leaderboardEntries: List<LeaderboardEntry>,
    private val currentUserId: Long? = null
) : RecyclerView.Adapter<LeaderboardAdapter.LeaderboardViewHolder>() {

    class LeaderboardViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
        val textViewRank: TextView = itemView.findViewById(R.id.textViewRank)
        val textViewDisplayName: TextView = itemView.findViewById(R.id.textViewDisplayName)
        val textViewPoints: TextView = itemView.findViewById(R.id.textViewPoints)
        val textViewCoin: TextView = itemView.findViewById(R.id.textViewCoin)
        val imageBadge: ImageView = itemView.findViewById(R.id.imageBadge)
        val viewHighlight: View? = itemView.findViewById(R.id.viewHighlight)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): LeaderboardViewHolder {
        val itemView = LayoutInflater.from(parent.context).inflate(R.layout.list_item_leaderboard, parent, false)
        return LeaderboardViewHolder(itemView)
    }

    override fun onBindViewHolder(holder: LeaderboardViewHolder, position: Int) {
        val entry = leaderboardEntries[position]
        val context = holder.itemView.context
        
        // Current user check (KENDÄ°SÄ° MAVÄ°, DÄ°ÄžERLERÄ° SÄ°YAH)
        val isCurrentUser = currentUserId != null && entry.id == currentUserId
        
        // Profile circle background - KENDÄ°SÄ° MAVÄ°, DÄ°ÄžERLERÄ° SÄ°YAH
        if (isCurrentUser) {
            // KENDÄ°SÄ° - MAVÄ° ARKA PLAN
            holder.textViewRank.setBackgroundResource(R.drawable.circle_background_blue)
            holder.itemView.setBackgroundColor(ContextCompat.getColor(context, R.color.light_blue))
        } else {
            // DÄ°ÄžERLERÄ° - SÄ°YAH ARKA PLAN
            holder.textViewRank.setBackgroundResource(R.drawable.circle_background_dark)
            holder.itemView.setBackgroundColor(ContextCompat.getColor(context, R.color.white))
        }
        
        // Profil resmi gÃ¶ster - Hashtag yerine profil ikonu
        holder.textViewRank.text = "ðŸ‘¤"  // Profil ikonu
        
        // Coin sistemi - 1. altÄ±n, 2. gÃ¼mÃ¼ÅŸ, 3. bronz, diÄŸerleri mavi
        when (entry.rank) {
            1 -> holder.textViewCoin.text = "ðŸ¥‡"  // 1. sÄ±ra - ALTIN
            2 -> holder.textViewCoin.text = "ðŸ¥ˆ"  // 2. sÄ±ra - GÃœMÃœÅž  
            3 -> holder.textViewCoin.text = "ðŸ¥‰"  // 3. sÄ±ra - BRONZ
            else -> holder.textViewCoin.text = "ðŸ”µ"  // DiÄŸerleri - MAVÄ°
        }
        
        holder.imageBadge.visibility = View.GONE
        
        // Display name with rank - "1. Sarah123" formatÄ±
        val username = when {
            !entry.displayName.isNullOrBlank() -> entry.displayName
            !entry.username.isNullOrBlank() -> entry.username  // Backend'ten username kullan
            !entry.firstName.isNullOrBlank() -> entry.firstName // Veya firstName kullan
            else -> "KullanÄ±cÄ±"  // Son Ã§are
        }
        holder.textViewDisplayName.text = "${entry.rank}. $username"
        val coins = entry.points / 10  // 10 puan = 1 coin
        holder.textViewPoints.text = "$coins"
        
        // Text color - Ä°SÄ°MLER SÄ°YAH OLMALI
        holder.textViewRank.setTextColor(ContextCompat.getColor(context, android.R.color.white))
        holder.textViewDisplayName.setTextColor(ContextCompat.getColor(context, android.R.color.black))
        holder.textViewPoints.setTextColor(ContextCompat.getColor(context, android.R.color.black))
    }

    override fun getItemCount() = leaderboardEntries.size
} 