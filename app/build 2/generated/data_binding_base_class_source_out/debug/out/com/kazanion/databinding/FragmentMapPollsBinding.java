// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapPollsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView aboutText;

  @NonNull
  public final MaterialButton buttonListView;

  @NonNull
  public final MaterialButton buttonMapView;

  @NonNull
  public final RecyclerView pollsListView;

  @NonNull
  public final MaterialButtonToggleGroup toggleButtonView;

  private FragmentMapPollsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView aboutText,
      @NonNull MaterialButton buttonListView, @NonNull MaterialButton buttonMapView,
      @NonNull RecyclerView pollsListView, @NonNull MaterialButtonToggleGroup toggleButtonView) {
    this.rootView = rootView;
    this.aboutText = aboutText;
    this.buttonListView = buttonListView;
    this.buttonMapView = buttonMapView;
    this.pollsListView = pollsListView;
    this.toggleButtonView = toggleButtonView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapPollsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapPollsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map_polls, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapPollsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_text;
      TextView aboutText = ViewBindings.findChildViewById(rootView, id);
      if (aboutText == null) {
        break missingId;
      }

      id = R.id.buttonListView;
      MaterialButton buttonListView = ViewBindings.findChildViewById(rootView, id);
      if (buttonListView == null) {
        break missingId;
      }

      id = R.id.buttonMapView;
      MaterialButton buttonMapView = ViewBindings.findChildViewById(rootView, id);
      if (buttonMapView == null) {
        break missingId;
      }

      id = R.id.pollsListView;
      RecyclerView pollsListView = ViewBindings.findChildViewById(rootView, id);
      if (pollsListView == null) {
        break missingId;
      }

      id = R.id.toggleButtonView;
      MaterialButtonToggleGroup toggleButtonView = ViewBindings.findChildViewById(rootView, id);
      if (toggleButtonView == null) {
        break missingId;
      }

      return new FragmentMapPollsBinding((ConstraintLayout) rootView, aboutText, buttonListView,
          buttonMapView, pollsListView, toggleButtonView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
