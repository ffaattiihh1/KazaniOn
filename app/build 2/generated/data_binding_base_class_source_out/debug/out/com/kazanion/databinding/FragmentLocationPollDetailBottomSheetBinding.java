// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLocationPollDetailBottomSheetBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView buttonCopyAddress;

  @NonNull
  public final Button buttonShowOnMap;

  @NonNull
  public final Button buttonTakePoll;

  @NonNull
  public final ImageView imageIcon;

  @NonNull
  public final TextView textAddress;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textDistance;

  @NonNull
  public final TextView textHello;

  @NonNull
  public final TextView textReward;

  @NonNull
  public final TextView textSteps;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView textWarning;

  private FragmentLocationPollDetailBottomSheetBinding(@NonNull NestedScrollView rootView,
      @NonNull ImageView buttonCopyAddress, @NonNull Button buttonShowOnMap,
      @NonNull Button buttonTakePoll, @NonNull ImageView imageIcon, @NonNull TextView textAddress,
      @NonNull TextView textDescription, @NonNull TextView textDistance,
      @NonNull TextView textHello, @NonNull TextView textReward, @NonNull TextView textSteps,
      @NonNull TextView textTitle, @NonNull TextView textWarning) {
    this.rootView = rootView;
    this.buttonCopyAddress = buttonCopyAddress;
    this.buttonShowOnMap = buttonShowOnMap;
    this.buttonTakePoll = buttonTakePoll;
    this.imageIcon = imageIcon;
    this.textAddress = textAddress;
    this.textDescription = textDescription;
    this.textDistance = textDistance;
    this.textHello = textHello;
    this.textReward = textReward;
    this.textSteps = textSteps;
    this.textTitle = textTitle;
    this.textWarning = textWarning;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLocationPollDetailBottomSheetBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLocationPollDetailBottomSheetBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_location_poll_detail_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLocationPollDetailBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCopyAddress;
      ImageView buttonCopyAddress = ViewBindings.findChildViewById(rootView, id);
      if (buttonCopyAddress == null) {
        break missingId;
      }

      id = R.id.buttonShowOnMap;
      Button buttonShowOnMap = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowOnMap == null) {
        break missingId;
      }

      id = R.id.buttonTakePoll;
      Button buttonTakePoll = ViewBindings.findChildViewById(rootView, id);
      if (buttonTakePoll == null) {
        break missingId;
      }

      id = R.id.imageIcon;
      ImageView imageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageIcon == null) {
        break missingId;
      }

      id = R.id.textAddress;
      TextView textAddress = ViewBindings.findChildViewById(rootView, id);
      if (textAddress == null) {
        break missingId;
      }

      id = R.id.textDescription;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.textDistance;
      TextView textDistance = ViewBindings.findChildViewById(rootView, id);
      if (textDistance == null) {
        break missingId;
      }

      id = R.id.textHello;
      TextView textHello = ViewBindings.findChildViewById(rootView, id);
      if (textHello == null) {
        break missingId;
      }

      id = R.id.textReward;
      TextView textReward = ViewBindings.findChildViewById(rootView, id);
      if (textReward == null) {
        break missingId;
      }

      id = R.id.textSteps;
      TextView textSteps = ViewBindings.findChildViewById(rootView, id);
      if (textSteps == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textWarning;
      TextView textWarning = ViewBindings.findChildViewById(rootView, id);
      if (textWarning == null) {
        break missingId;
      }

      return new FragmentLocationPollDetailBottomSheetBinding((NestedScrollView) rootView,
          buttonCopyAddress, buttonShowOnMap, buttonTakePoll, imageIcon, textAddress,
          textDescription, textDistance, textHello, textReward, textSteps, textTitle, textWarning);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
