// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogLocationPollDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonClose;

  @NonNull
  public final TextView textViewPollAddress;

  @NonNull
  public final TextView textViewPollDescription;

  @NonNull
  public final TextView textViewPollDistance;

  @NonNull
  public final TextView textViewPollPoints;

  @NonNull
  public final TextView textViewPollTitle;

  private DialogLocationPollDetailBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonClose, @NonNull TextView textViewPollAddress,
      @NonNull TextView textViewPollDescription, @NonNull TextView textViewPollDistance,
      @NonNull TextView textViewPollPoints, @NonNull TextView textViewPollTitle) {
    this.rootView = rootView;
    this.buttonClose = buttonClose;
    this.textViewPollAddress = textViewPollAddress;
    this.textViewPollDescription = textViewPollDescription;
    this.textViewPollDistance = textViewPollDistance;
    this.textViewPollPoints = textViewPollPoints;
    this.textViewPollTitle = textViewPollTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLocationPollDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLocationPollDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_location_poll_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLocationPollDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonClose;
      MaterialButton buttonClose = ViewBindings.findChildViewById(rootView, id);
      if (buttonClose == null) {
        break missingId;
      }

      id = R.id.textViewPollAddress;
      TextView textViewPollAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollAddress == null) {
        break missingId;
      }

      id = R.id.textViewPollDescription;
      TextView textViewPollDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollDescription == null) {
        break missingId;
      }

      id = R.id.textViewPollDistance;
      TextView textViewPollDistance = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollDistance == null) {
        break missingId;
      }

      id = R.id.textViewPollPoints;
      TextView textViewPollPoints = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollPoints == null) {
        break missingId;
      }

      id = R.id.textViewPollTitle;
      TextView textViewPollTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollTitle == null) {
        break missingId;
      }

      return new DialogLocationPollDetailBinding((LinearLayout) rootView, buttonClose,
          textViewPollAddress, textViewPollDescription, textViewPollDistance, textViewPollPoints,
          textViewPollTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
