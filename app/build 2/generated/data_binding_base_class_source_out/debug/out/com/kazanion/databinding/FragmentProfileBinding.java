// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonEditProfile;

  @NonNull
  public final MaterialButton buttonLogout;

  @NonNull
  public final ImageView editProfileIcon;

  @NonNull
  public final LinearLayout featureFriends;

  @NonNull
  public final LinearLayout featureInvite;

  @NonNull
  public final LinearLayout featureLocation;

  @NonNull
  public final LinearLayout featureNotifications;

  @NonNull
  public final LinearLayout featureRanking;

  @NonNull
  public final LinearLayout featureStatistics;

  @NonNull
  public final LinearLayout featureWallet;

  @NonNull
  public final CardView featuresCard;

  @NonNull
  public final TextView featuresTitle;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final LinearLayout settingHelp;

  @NonNull
  public final LinearLayout settingLanguage;

  @NonNull
  public final LinearLayout settingNotifications;

  @NonNull
  public final LinearLayout settingPrivacy;

  @NonNull
  public final CardView settingsCard;

  @NonNull
  public final TextView settingsTitle;

  @NonNull
  public final SwitchMaterial switchNotifications;

  @NonNull
  public final TextView textCompletedPolls;

  @NonNull
  public final TextView textGiftVouchers;

  @NonNull
  public final TextView textLanguage;

  @NonNull
  public final TextView textTotalPoints;

  @NonNull
  public final TextView textUserEmail;

  @NonNull
  public final TextView textUserName;

  private FragmentProfileBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonEditProfile, @NonNull MaterialButton buttonLogout,
      @NonNull ImageView editProfileIcon, @NonNull LinearLayout featureFriends,
      @NonNull LinearLayout featureInvite, @NonNull LinearLayout featureLocation,
      @NonNull LinearLayout featureNotifications, @NonNull LinearLayout featureRanking,
      @NonNull LinearLayout featureStatistics, @NonNull LinearLayout featureWallet,
      @NonNull CardView featuresCard, @NonNull TextView featuresTitle,
      @NonNull LinearLayout headerLayout, @NonNull ImageView profileImage,
      @NonNull LinearLayout settingHelp, @NonNull LinearLayout settingLanguage,
      @NonNull LinearLayout settingNotifications, @NonNull LinearLayout settingPrivacy,
      @NonNull CardView settingsCard, @NonNull TextView settingsTitle,
      @NonNull SwitchMaterial switchNotifications, @NonNull TextView textCompletedPolls,
      @NonNull TextView textGiftVouchers, @NonNull TextView textLanguage,
      @NonNull TextView textTotalPoints, @NonNull TextView textUserEmail,
      @NonNull TextView textUserName) {
    this.rootView = rootView;
    this.buttonEditProfile = buttonEditProfile;
    this.buttonLogout = buttonLogout;
    this.editProfileIcon = editProfileIcon;
    this.featureFriends = featureFriends;
    this.featureInvite = featureInvite;
    this.featureLocation = featureLocation;
    this.featureNotifications = featureNotifications;
    this.featureRanking = featureRanking;
    this.featureStatistics = featureStatistics;
    this.featureWallet = featureWallet;
    this.featuresCard = featuresCard;
    this.featuresTitle = featuresTitle;
    this.headerLayout = headerLayout;
    this.profileImage = profileImage;
    this.settingHelp = settingHelp;
    this.settingLanguage = settingLanguage;
    this.settingNotifications = settingNotifications;
    this.settingPrivacy = settingPrivacy;
    this.settingsCard = settingsCard;
    this.settingsTitle = settingsTitle;
    this.switchNotifications = switchNotifications;
    this.textCompletedPolls = textCompletedPolls;
    this.textGiftVouchers = textGiftVouchers;
    this.textLanguage = textLanguage;
    this.textTotalPoints = textTotalPoints;
    this.textUserEmail = textUserEmail;
    this.textUserName = textUserName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_edit_profile;
      MaterialButton buttonEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (buttonEditProfile == null) {
        break missingId;
      }

      id = R.id.button_logout;
      MaterialButton buttonLogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogout == null) {
        break missingId;
      }

      id = R.id.edit_profile_icon;
      ImageView editProfileIcon = ViewBindings.findChildViewById(rootView, id);
      if (editProfileIcon == null) {
        break missingId;
      }

      id = R.id.feature_friends;
      LinearLayout featureFriends = ViewBindings.findChildViewById(rootView, id);
      if (featureFriends == null) {
        break missingId;
      }

      id = R.id.feature_invite;
      LinearLayout featureInvite = ViewBindings.findChildViewById(rootView, id);
      if (featureInvite == null) {
        break missingId;
      }

      id = R.id.feature_location;
      LinearLayout featureLocation = ViewBindings.findChildViewById(rootView, id);
      if (featureLocation == null) {
        break missingId;
      }

      id = R.id.feature_notifications;
      LinearLayout featureNotifications = ViewBindings.findChildViewById(rootView, id);
      if (featureNotifications == null) {
        break missingId;
      }

      id = R.id.feature_ranking;
      LinearLayout featureRanking = ViewBindings.findChildViewById(rootView, id);
      if (featureRanking == null) {
        break missingId;
      }

      id = R.id.feature_statistics;
      LinearLayout featureStatistics = ViewBindings.findChildViewById(rootView, id);
      if (featureStatistics == null) {
        break missingId;
      }

      id = R.id.feature_wallet;
      LinearLayout featureWallet = ViewBindings.findChildViewById(rootView, id);
      if (featureWallet == null) {
        break missingId;
      }

      id = R.id.featuresCard;
      CardView featuresCard = ViewBindings.findChildViewById(rootView, id);
      if (featuresCard == null) {
        break missingId;
      }

      id = R.id.featuresTitle;
      TextView featuresTitle = ViewBindings.findChildViewById(rootView, id);
      if (featuresTitle == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.setting_help;
      LinearLayout settingHelp = ViewBindings.findChildViewById(rootView, id);
      if (settingHelp == null) {
        break missingId;
      }

      id = R.id.setting_language;
      LinearLayout settingLanguage = ViewBindings.findChildViewById(rootView, id);
      if (settingLanguage == null) {
        break missingId;
      }

      id = R.id.setting_notifications;
      LinearLayout settingNotifications = ViewBindings.findChildViewById(rootView, id);
      if (settingNotifications == null) {
        break missingId;
      }

      id = R.id.setting_privacy;
      LinearLayout settingPrivacy = ViewBindings.findChildViewById(rootView, id);
      if (settingPrivacy == null) {
        break missingId;
      }

      id = R.id.settingsCard;
      CardView settingsCard = ViewBindings.findChildViewById(rootView, id);
      if (settingsCard == null) {
        break missingId;
      }

      id = R.id.settingsTitle;
      TextView settingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (settingsTitle == null) {
        break missingId;
      }

      id = R.id.switchNotifications;
      SwitchMaterial switchNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchNotifications == null) {
        break missingId;
      }

      id = R.id.text_completed_polls;
      TextView textCompletedPolls = ViewBindings.findChildViewById(rootView, id);
      if (textCompletedPolls == null) {
        break missingId;
      }

      id = R.id.text_gift_vouchers;
      TextView textGiftVouchers = ViewBindings.findChildViewById(rootView, id);
      if (textGiftVouchers == null) {
        break missingId;
      }

      id = R.id.text_language;
      TextView textLanguage = ViewBindings.findChildViewById(rootView, id);
      if (textLanguage == null) {
        break missingId;
      }

      id = R.id.text_total_points;
      TextView textTotalPoints = ViewBindings.findChildViewById(rootView, id);
      if (textTotalPoints == null) {
        break missingId;
      }

      id = R.id.text_user_email;
      TextView textUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (textUserEmail == null) {
        break missingId;
      }

      id = R.id.text_user_name;
      TextView textUserName = ViewBindings.findChildViewById(rootView, id);
      if (textUserName == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ScrollView) rootView, buttonEditProfile, buttonLogout,
          editProfileIcon, featureFriends, featureInvite, featureLocation, featureNotifications,
          featureRanking, featureStatistics, featureWallet, featuresCard, featuresTitle,
          headerLayout, profileImage, settingHelp, settingLanguage, settingNotifications,
          settingPrivacy, settingsCard, settingsTitle, switchNotifications, textCompletedPolls,
          textGiftVouchers, textLanguage, textTotalPoints, textUserEmail, textUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
