// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBlogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imageViewBlog;

  @NonNull
  public final TextView textViewBlogDate;

  @NonNull
  public final TextView textViewBlogSummary;

  @NonNull
  public final TextView textViewBlogTitle;

  private ListItemBlogBinding(@NonNull LinearLayout rootView, @NonNull ImageView imageViewBlog,
      @NonNull TextView textViewBlogDate, @NonNull TextView textViewBlogSummary,
      @NonNull TextView textViewBlogTitle) {
    this.rootView = rootView;
    this.imageViewBlog = imageViewBlog;
    this.textViewBlogDate = textViewBlogDate;
    this.textViewBlogSummary = textViewBlogSummary;
    this.textViewBlogTitle = textViewBlogTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBlogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBlogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_blog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBlogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewBlog;
      ImageView imageViewBlog = ViewBindings.findChildViewById(rootView, id);
      if (imageViewBlog == null) {
        break missingId;
      }

      id = R.id.textViewBlogDate;
      TextView textViewBlogDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewBlogDate == null) {
        break missingId;
      }

      id = R.id.textViewBlogSummary;
      TextView textViewBlogSummary = ViewBindings.findChildViewById(rootView, id);
      if (textViewBlogSummary == null) {
        break missingId;
      }

      id = R.id.textViewBlogTitle;
      TextView textViewBlogTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewBlogTitle == null) {
        break missingId;
      }

      return new ListItemBlogBinding((LinearLayout) rootView, imageViewBlog, textViewBlogDate,
          textViewBlogSummary, textViewBlogTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
