// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPollsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAllPolls;

  @NonNull
  public final Button buttonCompletedPolls;

  @NonNull
  public final Button buttonNewPolls;

  @NonNull
  public final Button buttonOngoingPolls;

  @NonNull
  public final CardView cardViewNoPolls;

  @NonNull
  public final HorizontalScrollView horizontalScrollViewPollFilters;

  @NonNull
  public final LinearLayout linearLayoutPollFilters;

  @NonNull
  public final RecyclerView recyclerViewPolls;

  @NonNull
  public final TextView textViewPollsHeader;

  private FragmentPollsBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAllPolls,
      @NonNull Button buttonCompletedPolls, @NonNull Button buttonNewPolls,
      @NonNull Button buttonOngoingPolls, @NonNull CardView cardViewNoPolls,
      @NonNull HorizontalScrollView horizontalScrollViewPollFilters,
      @NonNull LinearLayout linearLayoutPollFilters, @NonNull RecyclerView recyclerViewPolls,
      @NonNull TextView textViewPollsHeader) {
    this.rootView = rootView;
    this.buttonAllPolls = buttonAllPolls;
    this.buttonCompletedPolls = buttonCompletedPolls;
    this.buttonNewPolls = buttonNewPolls;
    this.buttonOngoingPolls = buttonOngoingPolls;
    this.cardViewNoPolls = cardViewNoPolls;
    this.horizontalScrollViewPollFilters = horizontalScrollViewPollFilters;
    this.linearLayoutPollFilters = linearLayoutPollFilters;
    this.recyclerViewPolls = recyclerViewPolls;
    this.textViewPollsHeader = textViewPollsHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPollsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPollsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_polls, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPollsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_all_polls;
      Button buttonAllPolls = ViewBindings.findChildViewById(rootView, id);
      if (buttonAllPolls == null) {
        break missingId;
      }

      id = R.id.button_completed_polls;
      Button buttonCompletedPolls = ViewBindings.findChildViewById(rootView, id);
      if (buttonCompletedPolls == null) {
        break missingId;
      }

      id = R.id.button_new_polls;
      Button buttonNewPolls = ViewBindings.findChildViewById(rootView, id);
      if (buttonNewPolls == null) {
        break missingId;
      }

      id = R.id.button_ongoing_polls;
      Button buttonOngoingPolls = ViewBindings.findChildViewById(rootView, id);
      if (buttonOngoingPolls == null) {
        break missingId;
      }

      id = R.id.cardViewNoPolls;
      CardView cardViewNoPolls = ViewBindings.findChildViewById(rootView, id);
      if (cardViewNoPolls == null) {
        break missingId;
      }

      id = R.id.horizontalScrollViewPollFilters;
      HorizontalScrollView horizontalScrollViewPollFilters = ViewBindings.findChildViewById(rootView, id);
      if (horizontalScrollViewPollFilters == null) {
        break missingId;
      }

      id = R.id.linearLayoutPollFilters;
      LinearLayout linearLayoutPollFilters = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutPollFilters == null) {
        break missingId;
      }

      id = R.id.recyclerViewPolls;
      RecyclerView recyclerViewPolls = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPolls == null) {
        break missingId;
      }

      id = R.id.textViewPollsHeader;
      TextView textViewPollsHeader = ViewBindings.findChildViewById(rootView, id);
      if (textViewPollsHeader == null) {
        break missingId;
      }

      return new FragmentPollsBinding((ConstraintLayout) rootView, buttonAllPolls,
          buttonCompletedPolls, buttonNewPolls, buttonOngoingPolls, cardViewNoPolls,
          horizontalScrollViewPollFilters, linearLayoutPollFilters, recyclerViewPolls,
          textViewPollsHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
