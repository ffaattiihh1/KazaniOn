// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.maps.MapView;
import com.google.android.material.card.MaterialCardView;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExploreBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton listViewButton;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final ImageButton mapViewButton;

  @NonNull
  public final RecyclerView pollsRecyclerView;

  @NonNull
  public final Button regionListButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final MaterialCardView viewToggleCard;

  private FragmentExploreBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton listViewButton, @NonNull MapView mapView,
      @NonNull ImageButton mapViewButton, @NonNull RecyclerView pollsRecyclerView,
      @NonNull Button regionListButton, @NonNull SwipeRefreshLayout swipeRefresh,
      @NonNull MaterialCardView viewToggleCard) {
    this.rootView = rootView;
    this.listViewButton = listViewButton;
    this.mapView = mapView;
    this.mapViewButton = mapViewButton;
    this.pollsRecyclerView = pollsRecyclerView;
    this.regionListButton = regionListButton;
    this.swipeRefresh = swipeRefresh;
    this.viewToggleCard = viewToggleCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.listViewButton;
      ImageButton listViewButton = ViewBindings.findChildViewById(rootView, id);
      if (listViewButton == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.mapViewButton;
      ImageButton mapViewButton = ViewBindings.findChildViewById(rootView, id);
      if (mapViewButton == null) {
        break missingId;
      }

      id = R.id.pollsRecyclerView;
      RecyclerView pollsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (pollsRecyclerView == null) {
        break missingId;
      }

      id = R.id.regionListButton;
      Button regionListButton = ViewBindings.findChildViewById(rootView, id);
      if (regionListButton == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.viewToggleCard;
      MaterialCardView viewToggleCard = ViewBindings.findChildViewById(rootView, id);
      if (viewToggleCard == null) {
        break missingId;
      }

      return new FragmentExploreBinding((ConstraintLayout) rootView, listViewButton, mapView,
          mapViewButton, pollsRecyclerView, regionListButton, swipeRefresh, viewToggleCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
