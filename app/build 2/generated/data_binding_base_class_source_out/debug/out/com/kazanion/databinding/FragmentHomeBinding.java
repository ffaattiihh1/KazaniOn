// Generated by view binder compiler. Do not edit!
package com.kazanion.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.kazanion.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView activePollsCard;

  @NonNull
  public final MaterialButton buttonCashOut;

  @NonNull
  public final MaterialButton buttonExploreOnMap;

  @NonNull
  public final MaterialButton buttonStore;

  @NonNull
  public final MaterialCardView emailVerificationWarning;

  @NonNull
  public final ImageView imageViewLogo;

  @NonNull
  public final ImageView imageViewProfile;

  @NonNull
  public final MaterialCardView locationPollsCard;

  @NonNull
  public final RecyclerView locationPollsRecyclerView;

  @NonNull
  public final MaterialCardView phoneVerificationWarning;

  @NonNull
  public final RecyclerView recyclerViewActivePolls;

  @NonNull
  public final RecyclerView storiesRecyclerView;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextView textViewBalance;

  @NonNull
  public final TextView textViewPoints;

  @NonNull
  public final TextView textViewTumunuGor;

  @NonNull
  public final TextView textViewUserName;

  @NonNull
  public final TextView textViewWalletBalance;

  @NonNull
  public final TextView textViewWalletPoints;

  @NonNull
  public final ConstraintLayout topUserInfoSection;

  @NonNull
  public final MaterialCardView walletCard;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView activePollsCard, @NonNull MaterialButton buttonCashOut,
      @NonNull MaterialButton buttonExploreOnMap, @NonNull MaterialButton buttonStore,
      @NonNull MaterialCardView emailVerificationWarning, @NonNull ImageView imageViewLogo,
      @NonNull ImageView imageViewProfile, @NonNull MaterialCardView locationPollsCard,
      @NonNull RecyclerView locationPollsRecyclerView,
      @NonNull MaterialCardView phoneVerificationWarning,
      @NonNull RecyclerView recyclerViewActivePolls, @NonNull RecyclerView storiesRecyclerView,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull TextView textViewBalance,
      @NonNull TextView textViewPoints, @NonNull TextView textViewTumunuGor,
      @NonNull TextView textViewUserName, @NonNull TextView textViewWalletBalance,
      @NonNull TextView textViewWalletPoints, @NonNull ConstraintLayout topUserInfoSection,
      @NonNull MaterialCardView walletCard) {
    this.rootView = rootView;
    this.activePollsCard = activePollsCard;
    this.buttonCashOut = buttonCashOut;
    this.buttonExploreOnMap = buttonExploreOnMap;
    this.buttonStore = buttonStore;
    this.emailVerificationWarning = emailVerificationWarning;
    this.imageViewLogo = imageViewLogo;
    this.imageViewProfile = imageViewProfile;
    this.locationPollsCard = locationPollsCard;
    this.locationPollsRecyclerView = locationPollsRecyclerView;
    this.phoneVerificationWarning = phoneVerificationWarning;
    this.recyclerViewActivePolls = recyclerViewActivePolls;
    this.storiesRecyclerView = storiesRecyclerView;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.textViewBalance = textViewBalance;
    this.textViewPoints = textViewPoints;
    this.textViewTumunuGor = textViewTumunuGor;
    this.textViewUserName = textViewUserName;
    this.textViewWalletBalance = textViewWalletBalance;
    this.textViewWalletPoints = textViewWalletPoints;
    this.topUserInfoSection = topUserInfoSection;
    this.walletCard = walletCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activePollsCard;
      MaterialCardView activePollsCard = ViewBindings.findChildViewById(rootView, id);
      if (activePollsCard == null) {
        break missingId;
      }

      id = R.id.buttonCashOut;
      MaterialButton buttonCashOut = ViewBindings.findChildViewById(rootView, id);
      if (buttonCashOut == null) {
        break missingId;
      }

      id = R.id.buttonExploreOnMap;
      MaterialButton buttonExploreOnMap = ViewBindings.findChildViewById(rootView, id);
      if (buttonExploreOnMap == null) {
        break missingId;
      }

      id = R.id.buttonStore;
      MaterialButton buttonStore = ViewBindings.findChildViewById(rootView, id);
      if (buttonStore == null) {
        break missingId;
      }

      id = R.id.emailVerificationWarning;
      MaterialCardView emailVerificationWarning = ViewBindings.findChildViewById(rootView, id);
      if (emailVerificationWarning == null) {
        break missingId;
      }

      id = R.id.imageViewLogo;
      ImageView imageViewLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLogo == null) {
        break missingId;
      }

      id = R.id.imageViewProfile;
      ImageView imageViewProfile = ViewBindings.findChildViewById(rootView, id);
      if (imageViewProfile == null) {
        break missingId;
      }

      id = R.id.locationPollsCard;
      MaterialCardView locationPollsCard = ViewBindings.findChildViewById(rootView, id);
      if (locationPollsCard == null) {
        break missingId;
      }

      id = R.id.locationPollsRecyclerView;
      RecyclerView locationPollsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (locationPollsRecyclerView == null) {
        break missingId;
      }

      id = R.id.phoneVerificationWarning;
      MaterialCardView phoneVerificationWarning = ViewBindings.findChildViewById(rootView, id);
      if (phoneVerificationWarning == null) {
        break missingId;
      }

      id = R.id.recyclerViewActivePolls;
      RecyclerView recyclerViewActivePolls = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewActivePolls == null) {
        break missingId;
      }

      id = R.id.storiesRecyclerView;
      RecyclerView storiesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (storiesRecyclerView == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.textViewBalance;
      TextView textViewBalance = ViewBindings.findChildViewById(rootView, id);
      if (textViewBalance == null) {
        break missingId;
      }

      id = R.id.textViewPoints;
      TextView textViewPoints = ViewBindings.findChildViewById(rootView, id);
      if (textViewPoints == null) {
        break missingId;
      }

      id = R.id.textViewTumunuGor;
      TextView textViewTumunuGor = ViewBindings.findChildViewById(rootView, id);
      if (textViewTumunuGor == null) {
        break missingId;
      }

      id = R.id.textViewUserName;
      TextView textViewUserName = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserName == null) {
        break missingId;
      }

      id = R.id.textViewWalletBalance;
      TextView textViewWalletBalance = ViewBindings.findChildViewById(rootView, id);
      if (textViewWalletBalance == null) {
        break missingId;
      }

      id = R.id.textViewWalletPoints;
      TextView textViewWalletPoints = ViewBindings.findChildViewById(rootView, id);
      if (textViewWalletPoints == null) {
        break missingId;
      }

      id = R.id.top_user_info_section;
      ConstraintLayout topUserInfoSection = ViewBindings.findChildViewById(rootView, id);
      if (topUserInfoSection == null) {
        break missingId;
      }

      id = R.id.walletCard;
      MaterialCardView walletCard = ViewBindings.findChildViewById(rootView, id);
      if (walletCard == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, activePollsCard, buttonCashOut,
          buttonExploreOnMap, buttonStore, emailVerificationWarning, imageViewLogo,
          imageViewProfile, locationPollsCard, locationPollsRecyclerView, phoneVerificationWarning,
          recyclerViewActivePolls, storiesRecyclerView, swipeRefreshLayout, textViewBalance,
          textViewPoints, textViewTumunuGor, textViewUserName, textViewWalletBalance,
          textViewWalletPoints, topUserInfoSection, walletCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
